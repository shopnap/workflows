name: Subgraph

on:
  workflow_call:
    secrets:
      GOLANG_VERSION:
        required: true
        description: "Golang version to use. (ex: 1.17.5)"
      GOLANGCI_LINT_VERSION:
        required: true
        description: "GolangCI-Lint version to use. (ex: v1.43.0)"
      NODE_VERSION:
        required: true
        description: "NodeJS version to use. (ex: 14.1.0)"
      GOMODULE_PRIVATE_KEY:
        required: false
        description: "SSH key that has permission to access private Go modules."
      CODECOV_TOKEN:
        required: false
        description: "Codecov token."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code."
        uses: actions/checkout@v2

      - name: "Setup Go"
        uses: shopnap/setup-go@main
        with:
          go-version: ${{ secrets.GOLANG_VERSION }}
          private-key: ${{ secrets.GOMODULE_PRIVATE_KEY }}

      - name: "Download dependencies."
        run: make dependencies

      - name: "Build"
        run: make build

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code."
        uses: actions/checkout@v2

      - name: "Setup Go"
        uses: shopnap/setup-go@main
        with:
          go-version: ${{ secrets.GOLANG_VERSION }}
          private-key: ${{ secrets.GOMODULE_PRIVATE_KEY }}

      - name: "Download dependencies."
        run: make dependencies

      - name: "Test"
        run: make test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code."
        uses: actions/checkout@v2

      - name: "Setup Go"
        uses: shopnap/setup-go@main
        with:
          go-version: ${{ secrets.GOLANG_VERSION }}
          private-key: ${{ secrets.GOMODULE_PRIVATE_KEY }}

      - name: "Download dependencies."
        run: make dependencies

      - name: "Lint (Golang)"
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ secrets.GOLANGCI_LINT_VERSION }}
          args: --timeout=10m

      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: ${{ secrets.NODEJS_VERSION }}
          check-latest: true

      - name: "Install linters"
        run: |
          npm install --global graphql-schema-linter prettier

      - name: "Lint (GraphQL)"
        run: make lint-graphql

      - name: "Lint (Code generation)"
        run: make lint-generated-code

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "Checkout code."
        uses: actions/checkout@v2

      - name: "Setup Go"
        uses: shopnap/setup-go@main
        with:
          go-version: ${{ secrets.GOLANG_VERSION }}
          private-key: ${{ secrets.GOMODULE_PRIVATE_KEY }}

      - name: "Download dependencies."
        run: make dependencies

      - name: "Coverage"
        run: make coverage

      - name: "Upload coverage report."
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ env.CODECOV_TOKEN }}
          file: ./coverage.out
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
